{"hash":"e841fe397803320ec2bf730eb3a304e1fe871728","data":{"post":{"title":"Replace String Concatenation using Template Literals in JavaScript","date":"May 28, 2020","content":"<p><img src=\"https://cdn-images-1.medium.com/max/2800/1*97L17IA-0WdaxAs8dVPMwg.jpeg\" alt=\"Template Literals in JavaScript\"><em>Template Literals in JavaScript</em></p>\n<p>Template Literals allows you to embed javascript expression inside the string.</p>\n<p>To create a template literal, you should use <strong>`backtick `</strong></p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">I am a template stirng</span><span style=\"color: #89DDFF\">`</span></code></pre>\n<p>The template literal has three features</p>\n<ul>\n<li>Multi-line string</li>\n<li>Interpolation (Inserting expression inside String )</li>\n<li>Tagged template literal(Calling a function)</li>\n</ul>\n<h3 id=\"multi-line-string\"><a href=\"#multi-line-string\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Multi-line string</h3>\n<p>Before the template literals, if we want to create a multi-line then</p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span style=\"color: #FFCB6B\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #FFFFFF\">(</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">Line 1 </span><span style=\"color: #89DDFF\">\\n'</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C792EA\">+</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">Line 2</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #FFFFFF\">)</span><span style=\"color: #89DDFF\">;</span></code></pre>\n<p>But the above same can be simplified into</p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span style=\"color: #C792EA\">let</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">str</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C792EA\">=</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">Line 1</span>\n<span style=\"color: #C3E88D\">Line 2</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #89DDFF\">;</span>\n\n<span style=\"color: #FFCB6B\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #FFFFFF\">(</span><span style=\"color: #A6ACCD\">str</span><span style=\"color: #FFFFFF\">)</span><span style=\"color: #89DDFF\">;</span>\n\n<span style=\"color: #676E95\">// or</span>\n\n<span style=\"color: #FFCB6B\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #FFFFFF\">(</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">Line 1</span>\n<span style=\"color: #C3E88D\">Line 2</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #FFFFFF\">)</span><span style=\"color: #89DDFF\">;</span></code></pre>\n<p>Template literals make multiline strings much simpler.</p>\n<h3 id=\"interpolation\"><a href=\"#interpolation\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Interpolation</h3>\n<p>This will allow you to insert a valid JavaScript expression inside the template literal, before evaluating the string, all the expressions are executed.</p>\n<p>You can include the expression like <code>${expression}</code> .</p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span style=\"color: #C792EA\">let</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">a</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C792EA\">=</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #F78C6C\">10</span><span style=\"color: #89DDFF\">;</span>\n<span style=\"color: #C792EA\">let</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">b</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C792EA\">=</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #F78C6C\">20</span><span style=\"color: #89DDFF\">;</span>\n\n<span style=\"color: #FFCB6B\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #FFFFFF\">(</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">Result = **</span><span style=\"color: #89DDFF\">${</span><span style=\"color: #A6ACCD\">a</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #C792EA\">+</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #A6ACCD\">b</span><span style=\"color: #89DDFF\">}</span><span style=\"color: #C3E88D\">**</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #FFFFFF\">)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #676E95\">// **Result = 30**</span></code></pre>\n<p>Using conditional expression</p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span style=\"color: #C792EA\">var</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">a</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C792EA\">=</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #F78C6C\">10</span><span style=\"color: #89DDFF\">;</span>\n\n<span style=\"color: #C792EA\">var</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">b</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C792EA\">=</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #F78C6C\">20</span><span style=\"color: #89DDFF\">;</span>\n\n<span style=\"color: #FFCB6B\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #FFFFFF\">(</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\"> **</span><span style=\"color: #89DDFF\">${</span><span style=\"color: #A6ACCD\">a</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #C792EA\">&gt;</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #A6ACCD\">b</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #C792EA\">?</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #A6ACCD\">a</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #C792EA\">:</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #A6ACCD\">b</span><span style=\"color: #89DDFF\">}</span><span style=\"color: #C3E88D\">** is greater</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #FFFFFF\">)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #676E95\">// 20 is greater</span></code></pre>\n<p>Using function calls inside a template literal</p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span style=\"color: #C792EA\">function</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #82AAFF\">getName</span><span style=\"color: #89DDFF\">()</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #89DDFF\">{</span>\n<span style=\"color: #FFFFFF\">   </span><span style=\"color: #89DDFF\">return</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #89DDFF\">\"</span><span style=\"color: #C3E88D\">JavaScript Jeep</span><span style=\"color: #89DDFF\">\"</span><span style=\"color: #89DDFF\">;</span>\n<span style=\"color: #89DDFF\">}</span>\n\n<span style=\"color: #FFCB6B\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #FFFFFF\">(</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">Name =&gt; </span><span style=\"color: #89DDFF\">${</span><span style=\"color: #82AAFF\">getName</span><span style=\"color: #C3E88D\">()</span><span style=\"color: #89DDFF\">}`</span><span style=\"color: #FFFFFF\">)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #676E95\">// Name =&gt; JavaScript Jeep</span></code></pre>\n<p>Printing ` using de template literal</p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span style=\"color: #FFCB6B\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #FFFFFF\">(</span><span style=\"color: #89DDFF\">`\\``</span><span style=\"color: #FFFFFF\">)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #676E95\">// `</span></code></pre>\n<p>Printing <code>${}</code> using template literal</p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span style=\"color: #FFCB6B\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #FFFFFF\">(</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">$</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #FFFFFF\">)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #676E95\">//$</span>\n\n<span style=\"color: #FFCB6B\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #FFFFFF\">(</span><span style=\"color: #89DDFF\">`${`</span><span style=\"color: #C3E88D\">); // Uncaught SyntaxError: Unexpected end of input</span>\n\n<span style=\"color: #C3E88D\">console.log(</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #A6ACCD\">$</span><span style=\"color: #C3E88D\">\\</span><span style=\"color: #89DDFF\">{}`</span><span style=\"color: #C3E88D\">); // </span><span style=\"color: #89DDFF\">${}</span>\n\n<span style=\"color: #C3E88D\">// you can't have an empty </span><span style=\"color: #89DDFF\">${}</span>\n\n<span style=\"color: #C3E88D\">console.log(</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #A6ACCD\">$</span><span style=\"color: #89DDFF\">{}`</span><span style=\"color: #C3E88D\">);Uncaught SyntaxError: Unexpected token '}'</span>\n\n<span style=\"color: #C3E88D\">console.log(</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #A6ACCD\">$$</span><span style=\"color: #89DDFF\">{</span><span style=\"color: #C3E88D\">100</span><span style=\"color: #89DDFF\">}`</span><span style=\"color: #C3E88D\">); //$100</span>\n\n<span style=\"color: #C3E88D\">console.log(</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #A6ACCD\">$$</span><span style=\"color: #89DDFF\">{}`</span><span style=\"color: #C3E88D\">); // Uncaught SyntaxError: Unexpected token '}'</span>\n\n<span style=\"color: #C3E88D\">console.log(</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #A6ACCD\">$$</span><span style=\"color: #C3E88D\">\\</span><span style=\"color: #89DDFF\">{}`</span><span style=\"color: #C3E88D\">); // $</span><span style=\"color: #89DDFF\">${}</span></code></pre>\n<h3 id=\"tagged-templates\"><a href=\"#tagged-templates\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Tagged templates</h3>\n<p>The Tagged templates allow you to call a function.</p>\n<blockquote>\n<p>Tags allow you to parse template literals with a function.</p>\n</blockquote>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span style=\"color: #C792EA\">function</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #82AAFF\">tagFun</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FF5370\">string</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #FF5370\">param1</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #89DDFF\">{</span>\n<span style=\"color: #FFFFFF\">   </span><span style=\"color: #FFCB6B\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #FFFFFF\">(</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">String =&gt; </span><span style=\"color: #89DDFF\">${</span><span style=\"color: #A6ACCD\">string</span><span style=\"color: #89DDFF\">}`</span><span style=\"color: #FFFFFF\">)</span><span style=\"color: #89DDFF\">;</span>\n<span style=\"color: #FFFFFF\">   </span><span style=\"color: #FFCB6B\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #FFFFFF\">(</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">param1 =&gt; </span><span style=\"color: #89DDFF\">${</span><span style=\"color: #A6ACCD\">param1</span><span style=\"color: #89DDFF\">}`</span><span style=\"color: #FFFFFF\">)</span><span style=\"color: #89DDFF\">;</span>\n<span style=\"color: #89DDFF\">}</span>\n\n<span style=\"color: #C792EA\">let</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">a</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C792EA\">=</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #F78C6C\">10</span><span style=\"color: #89DDFF\">;</span>\n\n<span style=\"color: #82AAFF\">tagFun</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">This is a </span><span style=\"color: #89DDFF\">${</span><span style=\"color: #A6ACCD\">a</span><span style=\"color: #89DDFF\">}</span><span style=\"color: #C3E88D\"> test</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #89DDFF\">;</span>\n\n<span style=\"color: #A6ACCD\">output</span>\n\n<span style=\"color: #FF5370\">String</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">This</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">is</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">a</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">test</span>\n<span style=\"color: #FF5370\">param1</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #F78C6C\">10</span></code></pre>\n<p>In the above function, all the string are passed to string <code>param</code>, and the a passed to <code>param1</code> .</p>\n<p>Example 2</p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span style=\"color: #C792EA\">function</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #82AAFF\">tagFun</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FF5370\">string</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #FF5370\">param1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #FF5370\">param2</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #89DDFF\">{</span>\n<span style=\"color: #FFFFFF\">   </span><span style=\"color: #FFCB6B\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #FFFFFF\">(</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">string - </span><span style=\"color: #89DDFF\">${</span><span style=\"color: #A6ACCD\">string</span><span style=\"color: #89DDFF\">}`</span><span style=\"color: #FFFFFF\">)</span><span style=\"color: #89DDFF\">;</span>\n<span style=\"color: #FFFFFF\">   </span><span style=\"color: #FFCB6B\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #FFFFFF\">(</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">param1 = </span><span style=\"color: #89DDFF\">${</span><span style=\"color: #A6ACCD\">param1</span><span style=\"color: #89DDFF\">}</span><span style=\"color: #C3E88D\"> param2 = </span><span style=\"color: #89DDFF\">${</span><span style=\"color: #A6ACCD\">param2</span><span style=\"color: #89DDFF\">}`</span><span style=\"color: #FFFFFF\">)</span><span style=\"color: #89DDFF\">;</span>\n<span style=\"color: #89DDFF\">}</span>\n\n<span style=\"color: #C792EA\">var</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">a</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C792EA\">=</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #F78C6C\">10</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">b</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C792EA\">=</span><span style=\"color: #F78C6C\">20</span><span style=\"color: #89DDFF\">;</span>\n\n<span style=\"color: #82AAFF\">tagFun</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">a =&gt; </span><span style=\"color: #89DDFF\">${</span><span style=\"color: #A6ACCD\">a</span><span style=\"color: #89DDFF\">}</span><span style=\"color: #C3E88D\"> b =&gt; </span><span style=\"color: #89DDFF\">${</span><span style=\"color: #A6ACCD\">b</span><span style=\"color: #89DDFF\">}`</span><span style=\"color: #89DDFF\">;</span>\n\n<span style=\"color: #A6ACCD\">output</span>\n\n<span style=\"color: #A6ACCD\">string</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C792EA\">-</span><span style=\"color: #FF5370\">a</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #89DDFF\">,</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #FF5370\">b</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #89DDFF\">,</span>\n<span style=\"color: #A6ACCD\">param1</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C792EA\">=</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #F78C6C\">10</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">param2</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C792EA\">=</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #F78C6C\">20</span></code></pre>\n<p>Instead of using multiple params, you can use the <code>rest parameter</code></p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span style=\"color: #C792EA\">function</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #82AAFF\">tagFun</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FF5370\">string</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C792EA\">...</span><span style=\"color: #FF5370\">params</span><span style=\"color: #89DDFF\">){</span>\n<span style=\"color: #FFFFFF\">  </span><span style=\"color: #FFCB6B\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #FFFFFF\">(</span><span style=\"color: #A6ACCD\">params</span><span style=\"color: #FFFFFF\">)</span><span style=\"color: #89DDFF\">;</span>\n<span style=\"color: #89DDFF\">}</span>\n\n<span style=\"color: #C792EA\">var</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">a</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C792EA\">=</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #F78C6C\">10</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">b</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C792EA\">=</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #F78C6C\">20</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">c</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C792EA\">=</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #F78C6C\">100</span><span style=\"color: #89DDFF\">;</span>\n\n<span style=\"color: #82AAFF\">tagFun</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">testing </span><span style=\"color: #89DDFF\">${</span><span style=\"color: #A6ACCD\">a</span><span style=\"color: #89DDFF\">}</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #89DDFF\">${</span><span style=\"color: #A6ACCD\">b</span><span style=\"color: #89DDFF\">}</span><span style=\"color: #C3E88D\"> </span><span style=\"color: #89DDFF\">${</span><span style=\"color: #A6ACCD\">c</span><span style=\"color: #89DDFF\">}</span><span style=\"color: #C3E88D\"> end</span><span style=\"color: #89DDFF\">`</span>\n<span style=\"color: #676E95\">// [10, 20, 100]</span></code></pre>\n<p>Another Example using destructing variables</p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span style=\"color: #C792EA\">function</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #82AAFF\">testFun</span><span style=\"color: #89DDFF\">([</span><span style=\"color: #FF5370\">str1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #FF5370\">str2</span><span style=\"color: #89DDFF\">],</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #FF5370\">value</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #89DDFF\">{</span>\n<span style=\"color: #FFFFFF\">   </span><span style=\"color: #FFCB6B\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #FFFFFF\">(</span><span style=\"color: #A6ACCD\">str1</span><span style=\"color: #FFFFFF\">)</span><span style=\"color: #89DDFF\">;</span>\n<span style=\"color: #FFFFFF\">   </span><span style=\"color: #FFCB6B\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #FFFFFF\">(</span><span style=\"color: #A6ACCD\">str2</span><span style=\"color: #FFFFFF\">)</span><span style=\"color: #89DDFF\">;</span>\n<span style=\"color: #89DDFF\">}</span>\n\n<span style=\"color: #82AAFF\">testFun</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">This is </span><span style=\"color: #89DDFF\">${</span><span style=\"color: #F78C6C\">10</span><span style=\"color: #89DDFF\">}</span><span style=\"color: #C3E88D\"> a test</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #89DDFF\">;</span>\n\n<span style=\"color: #676E95\">// Output</span>\n\n<span style=\"color: #A6ACCD\">This</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">is</span>\n<span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">a</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">test</span></code></pre>\n<p>Using all the above in the real-world example</p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span style=\"color: #C792EA\">function</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #82AAFF\">math</span><span style=\"color: #89DDFF\">([</span><span style=\"color: #FF5370\">x</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #FF5370\">y</span><span style=\"color: #89DDFF\">],</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #FF5370\">operation</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #89DDFF\">{</span>\n<span style=\"color: #FFFFFF\">   </span><span style=\"color: #89DDFF\">return</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C792EA\">**</span><span style=\"color: #A6ACCD\">operation</span><span style=\"color: #C792EA\">**</span><span style=\"color: #FFFFFF\">(</span><span style=\"color: #FFCB6B\">Number</span><span style=\"color: #FFFFFF\">(</span><span style=\"color: #A6ACCD\">x</span><span style=\"color: #FFFFFF\">)</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #FFCB6B\">Number</span><span style=\"color: #FFFFFF\">(</span><span style=\"color: #A6ACCD\">y</span><span style=\"color: #FFFFFF\">))</span><span style=\"color: #89DDFF\">;</span>\n<span style=\"color: #89DDFF\">}</span>\n\n<span style=\"color: #C792EA\">function</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #82AAFF\">plus</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FF5370\">x</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #FF5370\">y</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #89DDFF\">{</span>\n<span style=\"color: #FFFFFF\">   </span><span style=\"color: #89DDFF\">return</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">x</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C792EA\">+</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">y</span><span style=\"color: #89DDFF\">;</span>\n<span style=\"color: #89DDFF\">}</span>\n\n<span style=\"color: #82AAFF\">math</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #C3E88D\">1 </span><span style=\"color: #89DDFF\">${</span><span style=\"color: #A6ACCD\">plus</span><span style=\"color: #89DDFF\">}</span><span style=\"color: #C3E88D\"> 2</span><span style=\"color: #89DDFF\">`</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #676E95\">// 3</span></code></pre>\n<p>The above example is taken from <a href=\"https://twitter.com/joelnet/status/1142217207042019330\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>.</p>\n<p>Thanks for reading.</p>\n<p>Please donate <a href=\"https://www.paypal.me/jagathishSaravanan?locale.x=en_GB\" target=\"_blank\" rel=\"nofollow noopener noreferrer\">here</a>, for making more tutorials.</p>\n","tags":[{"title":"String","path":"/tag/String/"},{"title":"js","path":"/tag/js/"},{"title":"es6","path":"/tag/es6/"},{"title":"JavaScript","path":"/tag/JavaScript/"}]}},"context":{}}