{"hash":"1fd28df5c732d8435c1ee0640c1f74f333dd57df","data":{"post":{"title":"Learn Mutation Observer in JavaScript","date":"June 26, 2020","content":"<h2 id=\"mutation-observer\"><a href=\"#mutation-observer\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Mutation Observer</h2>\n<ul>\n<li>Mutation Observer API is used to monitor DOM changes</li>\n<li>If there is any changes to the DOM, such as changes in nodes, changes in attributes, and changes in text content occurred then this API can be notified</li>\n<li>Mutation Observer is triggered asynchronously</li>\n</ul>\n<h2 id=\"creating-mutation-observer\"><a href=\"#creating-mutation-observer\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Creating Mutation Observer</h2>\n<p>Steps to create a mutation observer\n1. Create an observer object using <code>MutationObserver</code> constructor\n2. Call the <code>observe</code> method of <code>observer</code> object to detect changes of a node. While calling the observe method pass the <code>targetNode</code> which need to observed for changes and <code>observerOptions</code> which is a configuration for observer.</p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span style=\"color: #C792EA\">let</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">observer</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C792EA\">=</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C792EA\">new</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #FFCB6B\">MutationObserver</span><span style=\"color: #FFFFFF\">(</span><span style=\"color: #A6ACCD\">onDOMChanged</span><span style=\"color: #FFFFFF\">)</span><span style=\"color: #89DDFF\">;</span>\n\n<span style=\"color: #C792EA\">function</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #82AAFF\">onDOMChanged</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #FF5370\">mutations</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #89DDFF\">{</span>\n<span style=\"color: #89DDFF\">  </span><span style=\"color: #676E95\">//</span>\n<span style=\"color: #89DDFF\">}</span>\n\n<span style=\"color: #A6ACCD\">observer</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">observe</span><span style=\"color: #FFFFFF\">(</span><span style=\"color: #A6ACCD\">targetNode</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">observerOptions</span><span style=\"color: #FFFFFF\">)</span><span style=\"color: #89DDFF\">;</span></code></pre>\n<hr>\n<p>The <code>observerOptions</code> contains</p>\n<ul>\n<li>childList - Boolean representing whether to detect changes in the direct children of node</li>\n<li>attributes - Boolean representing whether to detect changes in the attributes</li>\n<li>attributeFilter - array of attribute name to observe</li>\n<li>characterData â€“ Boolean representing whether to observe changes in node.data (text content)</li>\n<li>subtree -  Boolean representing whether to apply the observer to all descendant nodes of the node</li>\n<li>attributeOldValue -  if true, both the old and the new value of attribute is passed to the callback otherwise only the new one (this is valid when you set <code>attributes:true</code>)</li>\n<li>characterDataOldValue -  if true, both the old and the new value of node.data is passed to the callback, otherwise only the changed content (this is valid when you set <code>characterData:true</code>).</li>\n</ul>\n<h3 id=\"example-for-observer-option\"><a href=\"#example-for-observer-option\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Example for observer option</h3>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span style=\"color: #C792EA\">let</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #A6ACCD\">options</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #C792EA\">=</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #89DDFF\">{</span>\n<span style=\"color: #FFFFFF\">  childList</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #F78C6C\">true</span><span style=\"color: #89DDFF\">,</span>\n<span style=\"color: #FFFFFF\">  attributes</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #F78C6C\">true</span><span style=\"color: #89DDFF\">,</span>\n<span style=\"color: #FFFFFF\">  characterData</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #F78C6C\">false</span><span style=\"color: #89DDFF\">,</span>\n<span style=\"color: #FFFFFF\">  subtree</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #F78C6C\">false</span><span style=\"color: #89DDFF\">,</span>\n<span style=\"color: #FFFFFF\">  attributeFilter</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> [</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">name</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #89DDFF\">'</span><span style=\"color: #C3E88D\">email</span><span style=\"color: #89DDFF\">'</span><span style=\"color: #FFFFFF\">]</span><span style=\"color: #89DDFF\">,</span>\n<span style=\"color: #FFFFFF\">  attributeOldValue</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #F78C6C\">false</span><span style=\"color: #89DDFF\">,</span>\n<span style=\"color: #FFFFFF\">  characterDataOldValue</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #FFFFFF\"> </span><span style=\"color: #F78C6C\">false</span>\n<span style=\"color: #89DDFF\">};</span></code></pre>\n<hr>\n<h2 id=\"remove-observer\"><a href=\"#remove-observer\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Remove observer</h2>\n<p>To remove Observer you can use <code>disconnect</code> method on <code>observer</code> object</p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span style=\"color: #A6ACCD\">observer</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">disconnect</span><span style=\"color: #FFFFFF\">()</span><span style=\"color: #89DDFF\">;</span></code></pre>\n<hr>\n<h2 id=\"examples\"><a href=\"#examples\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>Examples</h2>\n<p>Consider the html Elements</p>\n<pre class=\"shiki\" style=\"background-color: #292D3E\"><code><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">div</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #FFCB6B\">class</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">\"</span><span style=\"color: #C3E88D\">parent</span><span style=\"color: #89DDFF\">\"</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #FFCB6B\">name</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">\"</span><span style=\"color: #C3E88D\">JavaScript</span><span style=\"color: #89DDFF\">\"</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #FFCB6B\">mail</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">\"</span><span style=\"color: #C3E88D\">javjagathish1123@gmail.com</span><span style=\"color: #89DDFF\">\"</span><span style=\"color: #89DDFF\">&gt;</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">span</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #FFCB6B\">class</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">\"</span><span style=\"color: #C3E88D\">child</span><span style=\"color: #89DDFF\">\"</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #FFFFFF\">Child 1</span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">span</span><span style=\"color: #89DDFF\">&gt;</span>\n<span style=\"color: #FFFFFF\">    </span><span style=\"color: #89DDFF\">&lt;</span><span style=\"color: #F07178\">span</span><span style=\"color: #89DDFF\"> </span><span style=\"color: #FFCB6B\">class</span><span style=\"color: #89DDFF\">=</span><span style=\"color: #89DDFF\">\"</span><span style=\"color: #C3E88D\">child</span><span style=\"color: #89DDFF\">\"</span><span style=\"color: #89DDFF\">&gt;</span><span style=\"color: #FFFFFF\">Child 2 </span><span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">span</span><span style=\"color: #89DDFF\">&gt;</span>\n<span style=\"color: #89DDFF\">&lt;/</span><span style=\"color: #F07178\">div</span><span style=\"color: #89DDFF\">&gt;</span></code></pre>\n<h3 id=\"1-observing-child-elements-change\"><a href=\"#1-observing-child-elements-change\" aria-hidden=\"true\"><span class=\"icon icon-link\"></span></a>1. Observing Child Elements change</h3>\n","tags":[{"title":"JavaScript","path":"/tag/JavaScript/"},{"title":"jstips","path":"/tag/jstips/"}]}},"context":{}}